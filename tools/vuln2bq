#!/bin/bash

set -euo pipefail

f=$1

# input validation
[ -z "$f" ] && echo "vulnerability file not provided\n" && exit 1

# dependencies
jq=$(which jq) || ( echo "jq not installed" && exit 1 )
bq=$(which bq) || ( echo "bq not installed" && exit 1 )

d=$(date +%Y-%m-%d)
n=$(basename $f .json)

cat $f | jq -r \
    --arg d "$d" \
    '. as $root | .matches[] | [ $root.source.target.userInput, try($root.source.target.repoDigests[0] | split("@") | .[1]), .artifact.name, .artifact.version, .artifact.purl, .vulnerability.id, .vulnerability.severity, .vulnerability.fix.state, $d, ($root.descriptor.name + " " + $root.descriptor.version) ] | @csv' > "${n}.csv"

# output

# img_name - "registry.hub.docker.com/bitnami/external-dns"
# img_version - "sha256:8407139f6c18814a91d000cdaba3aea12b6f63bd9e6791db31d58190ce73c8c7"
# pkg_name - "tar"
# pkg_version - "1.34+dfsg-1"
# pkg_purl - "pkg:deb/debian/tar@1.34+dfsg-1?arch=amd64&distro=debian-11"
# cve_id - "CVE-2005-2541"
# vul_sev - "Negligible"
# vul_state - "not-fixed"
# gen_on - "2023-02-27"
# gen_by - "grype 0.73.0"

if [ -s "${n}.csv" ];then
    bq load \
        --project_id cloudy-labz \
        --source_format CSV \
        --time_partitioning_type MONTH \
        --max_bad_records 1000 \
        sbomer.vul \
        "${n}.csv" \
        setup/schema/vul.json
fi
